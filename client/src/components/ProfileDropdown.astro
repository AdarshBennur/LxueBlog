---
// Profile dropdown component for authenticated users
---

<div class="relative" id="profileDropdown">
  <!-- Profile Icon Button -->
  <button 
    type="button" 
    class="flex items-center justify-center w-10 h-10 rounded-full border-2 border-gold/30 bg-gradient-to-br from-gold/10 to-sand/20 hover:border-gold/60 hover:from-gold/20 hover:to-sand/30 transition-all duration-300 group"
    onclick="toggleProfileDropdown()"
    id="profileButton"
  >
    <!-- Profile Icon -->
    <svg class="w-5 h-5 text-gold group-hover:text-gold/80 transition-colors" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
      <path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
    </svg>
  </button>

  <!-- Dropdown Menu -->
  <div 
    id="profileMenu" 
    class="absolute right-0 mt-2 w-64 bg-white/95 backdrop-blur-sm border border-sand/30 rounded-lg shadow-xl opacity-0 invisible transform translate-y-2 transition-all duration-300 z-50"
  >
    <!-- User Info Section -->
    <div class="px-4 py-3 border-b border-sand/20">
      <div class="flex items-center space-x-3">
        <div class="w-12 h-12 rounded-full bg-gradient-to-br from-gold/20 to-sand/30 flex items-center justify-center">
          <svg class="w-6 h-6 text-gold" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
        </div>
        <div class="flex-1 min-w-0">
          <p class="text-sm font-serif font-medium text-charcoal truncate" id="userName">
            Loading...
          </p>
          <p class="text-xs font-serif text-mocha/70 truncate" id="userEmail">
            Loading...
          </p>
          <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-serif font-medium bg-gold/10 text-gold mt-1" id="membershipBadge">
            Free Tier
          </span>
        </div>
      </div>
    </div>

    <!-- Menu Items -->
    <div class="py-2">
      <a href="/profile" class="flex items-center px-4 py-2 text-sm font-serif font-medium text-charcoal hover:bg-sand/10 transition-colors">
        <svg class="w-4 h-4 mr-3 text-mocha/60" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
        </svg>
        My Profile
      </a>
      
      <a href="/settings" class="flex items-center px-4 py-2 text-sm font-serif font-medium text-charcoal hover:bg-sand/10 transition-colors">
        <svg class="w-4 h-4 mr-3 text-mocha/60" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
        </svg>
        Settings
      </a>

      <a href="/my-articles" class="flex items-center px-4 py-2 text-sm font-serif font-medium text-charcoal hover:bg-sand/10 transition-colors">
        <svg class="w-4 h-4 mr-3 text-mocha/60" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
        </svg>
        My Articles
      </a>

      <div class="border-t border-sand/20 mt-2 pt-2">
        <button 
          onclick="handleLogout()" 
          class="flex items-center w-full px-4 py-2 text-sm font-serif font-medium text-mocha hover:bg-red-50 hover:text-red-600 transition-colors"
        >
          <svg class="w-4 h-4 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
          </svg>
          Sign Out
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Toggle profile dropdown
  window.toggleProfileDropdown = function() {
    const menu = document.getElementById('profileMenu');
    const isVisible = !menu.classList.contains('opacity-0');
    
    if (isVisible) {
      // Hide dropdown
      menu.classList.add('opacity-0', 'invisible', 'translate-y-2');
    } else {
      // Show dropdown
      menu.classList.remove('opacity-0', 'invisible', 'translate-y-2');
    }
  }

  // Close dropdown when clicking outside
  document.addEventListener('click', function(event) {
    const dropdown = document.getElementById('profileDropdown');
    const menu = document.getElementById('profileMenu');
    
    if (dropdown && !dropdown.contains(event.target)) {
      menu.classList.add('opacity-0', 'invisible', 'translate-y-2');
    }
  });

  // Handle logout
  window.handleLogout = function() {
    // Clear user data
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    
    // Redirect to home page
    window.location.href = '/';
  }

  // Load user data when component mounts
  document.addEventListener('DOMContentLoaded', function() {
    const user = JSON.parse(localStorage.getItem('user') || '{}');
    
    if (user.name) {
      document.getElementById('userName').textContent = user.name;
    }
    if (user.email) {
      document.getElementById('userEmail').textContent = user.email;
    }
    if (user.membership) {
      const badge = document.getElementById('membershipBadge');
      badge.textContent = user.membership.charAt(0).toUpperCase() + user.membership.slice(1) + ' Tier';
      
      // Update badge color based on membership
      badge.className = 'inline-flex items-center px-2 py-0.5 rounded-full text-xs font-serif font-medium mt-1 ';
      switch(user.membership) {
        case 'premium':
          badge.className += 'bg-purple-100 text-purple-800';
          break;
        case 'elite':
          badge.className += 'bg-gradient-to-r from-yellow-100 to-yellow-200 text-yellow-800';
          break;
        case 'essential':
          badge.className += 'bg-blue-100 text-blue-800';
          break;
        default:
          badge.className += 'bg-gold/10 text-gold';
      }
    }
  });
</script>
